{"version":3,"sources":["actions/Cart.js","actions/Order.js","components/cart/Pagamento.jsx"],"names":["cartUpdateItemAction","produto","quantidade","type","CART_UPDATE","cartRemoveAllItemsAction","CART_ERASE","orderErrorAction","error","ORDER_ERROR","orderStore","dispatch","customer","cart","line_items","items","forEach","item","push","product_id","id","quantity","data","payment_method","payment_method_title","set_paid","shipping","shipping_lines","method_id","method_title","WOO_API","post","then","response","console","log","ORDER_STORE","orderStoreAction","catch","Pagamento","props","gateways","useDispatch","React","useState","value","setValue","Box","p","Grid","container","xs","Button","onClick","prevClick","FormControl","component","RadioGroup","aria-label","name","onChange","event","target","map","gw","FormControlLabel","control","Radio","label","title","key","style","marginTop","variant","color","backgroundColor","green","width"],"mappings":"uHAAA,+EAEO,SAASA,EAAqBC,EAASC,GAC5C,MAAO,CAAEC,KAAMC,IAAaH,UAASC,cAGhC,SAASG,IAEd,MAAO,CAAEF,KAAMG,O,4ICKV,SAASC,EAAiBC,GAC/B,MAAO,CAAEL,KAAMM,IAAaD,SAGvB,SAASE,EAAWC,EAAUC,EAAUC,GAC7C,IAAMC,EAAa,GACnBD,EAAKE,MAAMC,SAAQ,SAAAC,GACjBH,EAAWI,KAAK,CAAEC,WAAYF,EAAKhB,QAAQmB,GAAIC,SAAUJ,EAAKf,gBAEhE,IAAMoB,EAAO,CACXC,eAAgB,OAChBC,qBAAsB,uBACtBC,UAAU,EACVC,SAAUd,EAASc,SAEnBZ,WAAYA,EACZa,eAAgB,CACd,CACEC,UAAW,eACXC,aAAc,sBAKpBC,IAAQC,KAAK,SAAUT,GACpBU,MAAK,SAAAC,GACJtB,EAnCC,SAA0BW,GAE/B,OADAY,QAAQC,IAAI,WAAab,GAClB,CAAEnB,KAAMiC,IAAad,QAiCfe,CAAiBJ,EAASX,OACnCX,EAASN,kBAEViC,OAAM,SAAA9B,GACLG,EAASJ,EAAiBC,EAAMyB,c,2EC7BvB,SAASM,EAAUC,GAAQ,IAChC3B,EAA6B2B,EAA7B3B,KAAM4B,EAAuBD,EAAvBC,SAAU7B,EAAa4B,EAAb5B,SAClBD,EAAW+B,cAFsB,EAGbC,IAAMC,SAAS,IAHF,mBAGhCC,EAHgC,KAGzBC,EAHyB,KAavC,OACE,kBAACC,EAAA,EAAD,CAAKC,EAAG,GACN,yDACA,kBAACC,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAMhC,MAAI,EAACkC,GAAI,IACb,kBAACC,EAAA,EAAD,CAAQC,QAASb,EAAMc,WAAvB,WAEF,kBAACL,EAAA,EAAD,CAAMhC,MAAI,EAACkC,GAAI,IACb,kBAACI,EAAA,EAAD,CAAaC,UAAU,YACrB,kBAACC,EAAA,EAAD,CACEC,aAAW,YACXC,KAAK,YACLd,MAAOA,EACPe,SArBS,SAAAC,GACnBf,EAASe,EAAMC,OAAOjB,SAsBXJ,EAASsB,KAAI,SAAAC,GAAE,OACd,kBAACC,EAAA,EAAD,CACEpB,MAAOmB,EAAG5C,GACV8C,QAAS,kBAACC,EAAA,EAAD,MACTC,MAAOJ,EAAGK,MACVC,IAAKN,EAAG5C,WAMlB,kBAAC6B,EAAA,EAAD,CAAMhC,MAAI,EAACkC,GAAI,GAAIoB,MAAO,CAAEC,UAAW,KACrC,kBAACpB,EAAA,EAAD,CACEqB,QAAQ,YACRC,MAAM,UACNH,MAAO,CAAEI,gBAAiBC,IAAM,KAAMC,MAAO,QAC7CxB,QAnCc,WACtB3C,EAAWC,EAAUC,EAAUC,KA8BzB","file":"static/js/12.ea89c096.chunk.js","sourcesContent":["import { CART_UPDATE, CART_ERASE, CART_ERROR } from \"./actionTypes\";\n\nexport function cartUpdateItemAction(produto, quantidade) {\n  return { type: CART_UPDATE, produto, quantidade };\n}\n\nexport function cartRemoveAllItemsAction() {\n  //esvazia o carrinho\n  return { type: CART_ERASE };\n}\n\nexport function cartErrorAction(error) {\n  return { type: CART_ERROR, error };\n}\n","import { WOO_API } from \"../woocommerce\";\nimport { ORDER_GET, ORDER_STORE, ORDER_ERROR } from \"./actionTypes\";\nimport { cartRemoveAllItemsAction } from \"./Cart\";\n\nexport function orderStoreAction(data) {\n  console.log(\"chegou: \" + data);\n  return { type: ORDER_STORE, data };\n}\n\nexport function orderGetAction(data) {\n  return { type: ORDER_GET, data };\n}\n\nexport function orderErrorAction(error) {\n  return { type: ORDER_ERROR, error };\n}\n\nexport function orderStore(dispatch, customer, cart) {\n  const line_items = [];\n  cart.items.forEach(item => {\n    line_items.push({ product_id: item.produto.id, quantity: item.quantidade });\n  });\n  const data = {\n    payment_method: \"bacs\",\n    payment_method_title: \"Direct Bank Transfer\",\n    set_paid: false,\n    shipping: customer.shipping,\n\n    line_items: line_items,\n    shipping_lines: [\n      {\n        method_id: \"local_pickup\",\n        method_title: \"Retirar no Local\"\n      }\n    ]\n  };\n\n  WOO_API.post(\"orders\", data)\n    .then(response => {\n      dispatch(orderStoreAction(response.data));\n      dispatch(cartRemoveAllItemsAction());\n    })\n    .catch(error => {\n      dispatch(orderErrorAction(error.response));\n    });\n}\n\nexport function orderGet(dispatch, order_id) {\n  WOO_API.get(\"orders/\" + { order_id })\n    .then(response => {\n      dispatch(orderGetAction(response.data));\n    })\n    .catch(error => {\n      dispatch(orderErrorAction(error.response));\n    });\n}\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { orderStore } from \"../../actions/Order\";\nimport { green } from \"@material-ui/core/colors\";\nimport {\n  Box,\n  Button,\n  FormControl,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  Grid\n} from \"@material-ui/core\";\n\nexport default function Pagamento(props) {\n  const { cart, gateways, customer } = props;\n  const dispatch = useDispatch();\n  const [value, setValue] = React.useState(\"\");\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  const finalizarCompra = () => {\n    orderStore(dispatch, customer, cart);\n  };\n\n  return (\n    <Box p={2}>\n      <h3>Opções de pagamento</h3>\n      <Grid container>\n        <Grid item xs={12}>\n          <Button onClick={props.prevClick}>Voltar</Button>\n        </Grid>\n        <Grid item xs={12}>\n          <FormControl component=\"fieldset\">\n            <RadioGroup\n              aria-label=\"pagamento\"\n              name=\"pagamento\"\n              value={value}\n              onChange={handleChange}\n            >\n              {gateways.map(gw => (\n                <FormControlLabel\n                  value={gw.id}\n                  control={<Radio />}\n                  label={gw.title}\n                  key={gw.id}\n                />\n              ))}\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} style={{ marginTop: 20 }}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ backgroundColor: green[500], width: \"100%\" }}\n            onClick={finalizarCompra}\n          >\n            FINALIZAR COMPRA\n          </Button>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n"],"sourceRoot":""}